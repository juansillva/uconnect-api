
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProfessorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  avatar: 'avatar'
};

exports.Prisma.TurmaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  icon: 'icon'
};

exports.Prisma.ProfessorTurmaScalarFieldEnum = {
  professor_id: 'professor_id',
  turma_id: 'turma_id'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  conteudo: 'conteudo',
  data_criacao: 'data_criacao',
  data_atualizacao: 'data_atualizacao',
  professor_id: 'professor_id',
  turma_id: 'turma_id'
};

exports.Prisma.PostArquivoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  url: 'url',
  tipo: 'tipo',
  tamanho: 'tamanho',
  post_id: 'post_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Professor: 'Professor',
  Turma: 'Turma',
  ProfessorTurma: 'ProfessorTurma',
  Post: 'Post',
  PostArquivo: 'PostArquivo'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/juansilva/Área de Trabalho/portal-utec/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/juansilva/Área de Trabalho/portal-utec/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Professor {\n  id     Int              @id @default(autoincrement())\n  nome   String\n  email  String           @unique\n  senha  String\n  avatar String?\n  posts  Post[]\n  turmas ProfessorTurma[]\n}\n\nmodel Turma {\n  id          Int              @id @default(autoincrement())\n  nome        String           @unique\n  icon        String?\n  posts       Post[]\n  professores ProfessorTurma[]\n}\n\nmodel ProfessorTurma {\n  professor    Professor @relation(fields: [professor_id], references: [id])\n  professor_id Int\n  turma        Turma     @relation(fields: [turma_id], references: [id])\n  turma_id     Int\n\n  @@id([professor_id, turma_id])\n}\n\nmodel Post {\n  id               Int           @id @default(autoincrement())\n  titulo           String\n  conteudo         String // Obrigatório\n  data_criacao     DateTime      @default(now())\n  data_atualizacao DateTime?     @updatedAt\n  professor        Professor     @relation(fields: [professor_id], references: [id])\n  professor_id     Int\n  turma            Turma         @relation(fields: [turma_id], references: [id])\n  turma_id         Int\n  arquivos         PostArquivo[]\n}\n\nmodel PostArquivo {\n  id      Int    @id @default(autoincrement())\n  nome    String\n  url     String\n  tipo    String\n  tamanho Int?\n  post    Post   @relation(fields: [post_id], references: [id], onDelete: Cascade)\n  post_id Int\n}\n",
  "inlineSchemaHash": "5cb8a4b6ec4a1d993f5dce8eb35fdb7fb84f709ad119f95239032163035d7a89",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Professor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToProfessor\"},{\"name\":\"turmas\",\"kind\":\"object\",\"type\":\"ProfessorTurma\",\"relationName\":\"ProfessorToProfessorTurma\"}],\"dbName\":null},\"Turma\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToTurma\"},{\"name\":\"professores\",\"kind\":\"object\",\"type\":\"ProfessorTurma\",\"relationName\":\"ProfessorTurmaToTurma\"}],\"dbName\":null},\"ProfessorTurma\":{\"fields\":[{\"name\":\"professor\",\"kind\":\"object\",\"type\":\"Professor\",\"relationName\":\"ProfessorToProfessorTurma\"},{\"name\":\"professor_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"turma\",\"kind\":\"object\",\"type\":\"Turma\",\"relationName\":\"ProfessorTurmaToTurma\"},{\"name\":\"turma_id\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conteudo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_criacao\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data_atualizacao\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"professor\",\"kind\":\"object\",\"type\":\"Professor\",\"relationName\":\"PostToProfessor\"},{\"name\":\"professor_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"turma\",\"kind\":\"object\",\"type\":\"Turma\",\"relationName\":\"PostToTurma\"},{\"name\":\"turma_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"arquivos\",\"kind\":\"object\",\"type\":\"PostArquivo\",\"relationName\":\"PostToPostArquivo\"}],\"dbName\":null},\"PostArquivo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tamanho\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostArquivo\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

